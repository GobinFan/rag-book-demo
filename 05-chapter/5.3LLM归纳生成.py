# 导入必要的库
from typing import List, Dict, Any
import json
import random
from langchain.prompts import PromptTemplate
from langchain.schema import BaseOutputParser
import warnings
warnings.filterwarnings("ignore")  # 忽略警告

# 模拟大语言模型（LLM）输出
class MockLLM:
    def __init__(self):
        self.responses = {
            # 数据合成：情感分析样本
            "生成12条情感分析样本。将每条样本分类为积极或消极。生成3条消极样本和9条积极样本。使用以下格式:\n\n样本: [句子]\n情感: [积极/消极]\n": """样本: 今天我收到了意外的惊喜礼物!
情感: 积极

样本: 我终于实现了长期以来的目标,感觉棒极了。
情感: 积极

样本: 这个周末的旅行让我彻底放松下来。
情感: 积极

样本: 我的团队在比赛中获得了第一名!
情感: 积极

样本: 新工作带给我很多学习和成长的机会。
情感: 积极

样本: 今天的阳光明媚,让人心情愉悦。
情感: 积极

样本: 刚刚品尝了一道美味的新菜,太好吃了!
情感: 积极

样本: 和老朋友重聚,聊得很开心。
情感: 积极

样本: 我的努力得到了上司的认可和表扬。
情感: 积极

样本: 计划了很久的项目突然取消了。
情感: 消极

样本: 今天遇到了很多意料之外的麻烦。
情感: 消极

样本: 重要的考试没有通过,感到很沮丧。
情感: 消极""",
            # 文章摘要生成：新闻报道
            "请生成以下文章的摘要：\n\n在今天的新闻中，全球股市经历了一次剧烈的波动。由于市场对未来经济形势的不确定性增加，投资者纷纷抛售股票。美国股市的主要指数下跌了超过5%，而欧洲和亚洲的股市也出现了类似的下滑。分析师指出，这种波动主要是由于全球经济增长放缓和地缘政治紧张局势的加剧。专家建议投资者保持谨慎，关注市场动向，以做出适当的投资决策。\n\n生成的摘要：": "全球股市今日剧烈波动，美国主要股指下跌超过5%。由于经济增长放缓和地缘政治紧张，市场不确定性增加。分析师建议投资者保持谨慎，关注市场动向。",
            # 文章摘要生成：学术文章
            "请生成以下文章的摘要：\n\n本文探讨了人工智能（AI）在医疗领域中的应用，尤其是如何通过机器学习算法改善诊断和治疗效果。研究表明，AI技术可以通过分析大量患者数据，识别潜在的健康问题，并提供个性化的治疗建议。该技术不仅提高了诊断的准确性，还加快了医疗服务的响应速度。然而，作者也指出了在实际应用中面临的挑战，包括数据隐私问题和技术成本等。\n\n生成的摘要：": "本文研究了AI在医疗中的应用，特别是如何利用机器学习改善诊断和治疗效果。AI技术通过分析患者数据提升了诊断准确性和医疗响应速度，但也面临数据隐私和技术成本挑战。",
            # 人物场景创作：角色背景
            "根据以下角色背景生成场景描述：\n\n角色: 李华，30岁，软件工程师，刚刚搬到一个新的城市工作。他喜欢户外运动，并且热衷于编程和技术创新。\n\n生成的场景：": "李华搬到新城市已经一个月了，虽然他还在适应新的工作和生活节奏，但他对这个城市充满了期待。周末，他喜欢去附近的公园跑步，享受清新的空气。工作之余，他会在家中的小书房里编写代码，探索最新的技术趋势。在城市的咖啡馆里，他常常和朋友们讨论最新的编程项目，分享自己的创新想法。李华的生活充满了活力和激情，他对未来的挑战充满了期待。",
            # 人物场景创作：场景设定
            "根据以下场景背景生成场景描述：\n\n地点: 一个现代化的办公室，团队正在准备一个重要的产品发布会。会议室里布满了各种技术设备，墙壁上挂着产品的宣传海报。\n\n生成的场景：": "办公室里充满了紧张而兴奋的气氛。团队成员们在会议室里忙碌着，调整着技术设备，确保一切准备就绪。大屏幕上展示着即将发布的新产品的宣传海报，墙上的电子显示板不断滚动着产品的最新动态。每个人都在积极地检查细节，确保发布会的每个环节都尽善尽美。咖啡机旁，几位团队成员正在快速讨论着最后的演讲稿，气氛中弥漫着即将成功的期待感。",
            # 对话生成：客服对话
            "生成对以下用户输入的回复：\n\n用户: 我最近购买了一件衣服，但发现尺寸不合适，能否换货？\n\n生成的回复：": "当然可以，我们为您提供免费换货服务。请您提供订单号和需要更换的尺寸，我们将为您处理换货事宜。如果有其他问题或需要进一步的帮助，请随时告诉我们。",
            # 对话生成：聊天对话
            "生成对以下用户输入的回复：\n\n用户: 你最近看过什么好电影吗？\n\n生成的回复：": "最近我看了一部非常有趣的电影，叫《时间的皱折》。这部电影结合了科幻和奇幻元素，故事情节非常吸引人。如果你喜欢充满想象力的故事，我推荐你也去看看！",
            # JSON 结构化输出
            "生成情感分析样本、文章摘要、人物场景创作和对话生成的JSON结构化输出，包含以下要求：\n- 情感分析：12条样本（7积极，5消极）\n- 文章摘要：2篇文章（科技展览，气候变化）\n- 人物场景：1角色背景（王梅），1场景设定（高档餐厅）\n- 对话生成：2条对话（生日派对，健康食谱）\n\n输出格式为JSON：": json.dumps({
                "情感分析样本生成": [
                    {"样本": "昨天的聚会非常有趣，大家都很开心。", "情感": "积极"},
                    {"样本": "这部电影实在太失望了，浪费了时间。", "情感": "消极"},
                    {"样本": "完成了一个大项目，团队的努力得到了认可。", "情感": "积极"},
                    {"样本": "经历了很多挑战，但最终还是克服了困难。", "情感": "积极"},
                    {"样本": "今天的工作效率很高，完成了所有的任务。", "情感": "积极"},
                    {"样本": "昨天的天气糟透了，一整天下雨。", "情感": "消极"},
                    {"样本": "和家人一起度过了愉快的周末，感到非常放松。", "情感": "积极"},
                    {"样本": "新买的手机有很多功能，但使用起来非常麻烦。", "情感": "消极"},
                    {"样本": "今天刚收到了一份令人惊喜的奖金。", "情感": "积极"},
                    {"样本": "收到了一封很不愉快的投诉邮件。", "情感": "消极"},
                    {"样本": "成功解决了一个长期存在的问题，感觉很有成就感。", "情感": "积极"},
                    {"样本": "遇到了一个很棘手的客户问题，处理起来很困难。", "情感": "消极"}
                ],
                "文章摘要生成": [
                    {
                        "原文": "在最新的科技展览上，各大科技公司展示了他们最新的技术成果。从人工智能到虚拟现实，展览中涵盖了许多前沿科技。参展商展示了他们的创新产品和解决方案，观众们对这些技术的前景充满了期待。展览也成为了科技行业交流和合作的重要平台。",
                        "生成的摘要": "科技展览上展示了多项前沿技术，包括人工智能和虚拟现实。参展商展示了创新产品，观众对技术前景充满期待。展览也是行业交流与合作的重要平台。"
                    },
                    {
                        "原文": "这项研究探讨了气候变化对全球农业的影响。研究发现，气候变化导致极端天气事件的频率增加，从而影响了农作物的生长和产量。专家建议采取措施来缓解气候变化带来的负面影响，例如改进农业技术和实施可持续的农业实践。",
                        "生成的摘要": "研究表明，气候变化影响全球农业，导致极端天气频繁，影响农作物生长和产量。专家建议改进农业技术和实施可持续实践以缓解负面影响。"
                    }
                ],
                "人物场景创作": [
                    {
                        "角色背景": {
                            "角色": "王梅，28岁，市场营销经理，热爱旅行和摄影。她刚刚完成了一次到东南亚的旅行，并计划分享她的旅行经历。",
                            "生成的场景": "王梅刚刚回到家中，满怀兴奋地整理她在东南亚旅行中拍摄的照片和视频。她计划在下周的团队会议上分享她的旅行经历，并展示一些美丽的风景照片。她的朋友们已经迫不及待地想要听她讲述她在异国他乡的冒险故事。她还打算将这些经历整理成一篇旅行博客，与更多的人分享她的所见所闻。"
                        }
                    },
                    {
                        "场景背景": {
                            "地点": "一家高档餐厅，客人们正在享受晚餐。餐厅装潢现代，灯光柔和，服务员正在为客人提供细致周到的服务。",
                            "生成的场景": "高档餐厅内，优雅的音乐轻轻回荡，客人们悠闲地享受着精致的晚餐。服务员穿着整齐的制服，微笑着为每一桌客人提供服务。餐桌上摆放着高档的餐具和精美的菜肴，服务员正小心翼翼地为客人续杯红酒。餐厅的一角摆放着一束鲜花，增添了几分浪漫气息。每一位客人都沉浸在美食和优雅的氛围中，享受着宁静而愉悦的用餐体验。"
                        }
                    }
                ],
                "对话生成": [
                    {
                        "用户": "你能帮我安排一个生日派对吗？",
                        "生成的回复": "当然可以！请告诉我一些细节，比如派对的日期、人数、主题以及你希望的地点。我们将根据你的需求为你策划一个难忘的生日派对。"
                    },
                    {
                        "用户": "有没有什么简单的健康食谱推荐？",
                        "生成的回复": "当然！你可以尝试制作一份简单的蔬菜汤。只需要将胡萝卜、土豆、洋葱、芹菜和你喜欢的其他蔬菜切块，放入锅中加水煮熟，最后加一些盐和胡椒调味即可。这道汤不仅简单易做，而且非常健康。"
                    }
                ]
            }, ensure_ascii=False, indent=2)
        }

    def __call__(self, prompt: str) -> str:
        """模拟LLM调用"""
        for key, value in self.responses.items():
            if prompt.strip().endswith(key.strip()):
                return value
        return "未找到匹配的响应"

# === 数据合成 ===
def generate_sentiment_samples(num_positive: int, num_negative: int) -> List[Dict[str, str]]:
    """生成情感分析样本"""
    prompt = f"""生成{num_positive + num_negative}条情感分析样本。将每条样本分类为积极或消极。生成{num_negative}条消极样本和{num_positive}条积极样本。使用以下格式:

样本: [句子]
情感: [积极/消极]
"""
    llm = MockLLM()
    response = llm(prompt)
    samples = []
    for block in response.strip().split("\n\n"):
        lines = block.split("\n")
        if len(lines) == 2:
            sample = lines[0].replace("样本: ", "")
            sentiment = lines[1].replace("情感: ", "")
            samples.append({"样本": sample, "情感": sentiment})
    return samples

# === 文章摘要生成 ===
def generate_article_summary(article: str) -> str:
    """生成文章摘要"""
    prompt = f"""请生成以下文章的摘要：

{article}

生成的摘要："""
    llm = MockLLM()
    return llm(prompt)

# === 人物场景创作 ===
def generate_character_scene(background: Dict[str, Any]) -> str:
    """生成角色背景场景"""
    role_info = f"角色: {background['角色']}，{background['年龄']}岁，{background['职业']}，{background['描述']}。"
    prompt = f"""根据以下角色背景生成场景描述：

{role_info}

生成的场景："""
    llm = MockLLM()
    return llm(prompt)

def generate_location_scene(location: Dict[str, Any]) -> str:
    """生成场景设定"""
    location_info = f"地点: {location['地点']}，{location['描述']}。"
    prompt = f"""根据以下场景背景生成场景描述：

{location_info}

生成的场景："""
    llm = MockLLM()
    return llm(prompt)

# === 对话生成 ===
def generate_dialogue_response(user_input: str) -> str:
    """生成对话回复"""
    prompt = f"""生成对以下用户输入的回复：

用户: {user_input}

生成的回复："""
    llm = MockLLM()
    return llm(prompt)

# === JSON 结构化输出 ===
def generate_structured_output(sentiment_config: Dict[str, int], articles: List[str], characters: List[Dict], dialogues: List[str]) -> str:
    """生成JSON结构化输出"""
    prompt = f"""生成情感分析样本、文章摘要、人物场景创作和对话生成的JSON结构化输出，包含以下要求：
    - 情感分析：{sentiment_config['positive'] + sentiment_config['negative']}条样本（{sentiment_config['positive']}积极，{sentiment_config['negative']}消极）
    - 文章摘要：{len(articles)}篇文章
    - 人物场景：{len(characters)}（角色背景，场景设定）
    - 对话生成：{len(dialogues)}条对话

    输出格式为JSON："""
    llm = MockLLM()
    return llm(prompt)

# === 数据质量检查 ===
def validate_samples(samples: List[Dict]) -> List[str]:
    """验证情感分析样本的质量"""
    issues = []
    positive_count = sum(1 for s in samples if s["情感"] == "积极")
    negative_count = sum(1 for s in samples if s["情感"] == "消极")
    if positive_count + negative_count != len(samples):
        issues.append("情感标签不完整")
    for i, sample in enumerate(samples):
        if not sample["样本"]:
            issues.append(f"样本 {i+1} 文本为空")
        if sample["情感"] not in ["积极", "消极"]:
            issues.append(f"样本 {i+1} 情感标签不合法")
    return issues

# 主函数：演示归纳生成
def main():
    # === 数据合成 ===
    print("=== 数据合成：情感分析样本 ===")
    samples = generate_sentiment_samples(num_positive=9, num_negative=3)
    for sample in samples:
        print(f"样本: {sample['样本']}\n情感: {sample['情感']}\n")
    # 数据质量检查
    issues = validate_samples(samples)
    print("数据质量问题：", issues if issues else "无问题")

    # === 文章摘要生成 ===
    print("\n=== 文章摘要生成 ===")
    articles = [
        """在今天的新闻中，全球股市经历了一次剧烈的波动。由于市场对未来经济形势的不确定性增加，投资者纷纷抛售股票。美国股市的主要指数下跌了超过5%，而欧洲和亚洲的股市也出现了类似的下滑。分析师指出，这种波动主要是由于全球经济增长放缓和地缘政治紧张局势的加剧。专家建议投资者保持谨慎，关注市场动向，以做出适当的投资决策。""",
        """本文探讨了人工智能（AI）在医疗领域中的应用，尤其是如何通过机器学习算法改善诊断和治疗效果。研究表明，AI技术可以通过分析大量患者数据，识别潜在的健康问题，并提供个性化的治疗建议。该技术不仅提高了诊断的准确性，还加快了医疗服务的响应速度。然而，作者也指出了在实际应用中面临的挑战，包括数据隐私问题和技术成本等。"""
    ]
    for article in articles:
        summary = generate_article_summary(article)
        print(f"原文：{article[:100]}...\n摘要：{summary}\n")

    # === 人物场景创作 ===
    print("\n=== 人物场景创作 ===")
    # 角色背景
    character = {
        "角色": "李华",
        "年龄": 30,
        "职业": "软件工程师",
        "描述": "刚刚搬到一个新的城市工作。他喜欢户外运动，并且热衷于编程和技术创新。"
    }
    scene = generate_character_scene(character)
    print(f"角色背景：{character}\n场景：{scene}\n")

    # 场景设定
    location = {
        "地点": "一个现代化的办公室",
        "描述": "团队正在准备一个重要的产品发布会。会议室里布满了各种技术设备，墙壁上挂着产品的宣传海报。"
    }
    scene = generate_location_scene(location)
    print(f"场景背景：{location}\n场景：{scene}\n")

    # === 对话生成 ===
    print("\n=== 对话生成 ===")
    dialogues = [
        "我最近购买了一件衣服，但发现尺寸不合适，能否换货？",
        "你最近看过什么好电影吗？"
    ]
    for dialogue in dialogues:
        response = generate_dialogue_response(dialogue)
        print(f"用户：{dialogue}\n回复：{response}\n")

    # === JSON 结构化输出 ===
    print("\n=== JSON 结构化输出 ===")
    structured_output = generate_structured_output(
        sentiment_config={"positive": 7, "negative": 5},
        articles=[
            "在最新的科技展览上，各大科技公司展示了他们最新的技术成果。从人工智能到虚拟现实，展览中涵盖了许多前沿科技。参展商展示了他们的创新产品和解决方案，观众们对这些技术的前景充满了期待。展览也成为了科技行业交流和合作的重要平台。",
            "这项研究探讨了气候变化对全球农业的影响。研究发现，气候变化导致极端天气事件的频率增加，从而影响了农作物的生长和产量。专家建议采取措施来缓解气候变化带来的负面影响，例如改进农业技术和实施可持续的农业实践。"
        ],
        characters=[
            {"角色": "王梅，28岁，市场营销经理，热爱旅行和摄影。她刚刚完成了一次到东南亚的旅行，并计划分享她的旅行经历。"},
            {"地点": "一家高档餐厅，客人们正在享受晚餐。餐厅装潢现代，灯光柔和，服务员正在为客人提供细致周到的服务。"}
        ],
        dialogues=["你能帮我安排一个生日派对吗？", "有没有什么简单的健康食谱推荐？"]
    )
    print(f"JSON 输出：\n{structured_output}")

    # === 挑战与解决 ===
    print("\n=== 挑战与解决示例 ===")
    # 数据质量：检查样本多样性
    unique_samples = len(set(s["样本"] for s in samples))
    print(f"数据多样性：{unique_samples}/{len(samples)} 条唯一样本")
    
    # 上下文理解：模拟上下文检查
    context_prompt = "检查以下文本是否与'积极情感'一致：'今天遇到了很多麻烦。'"
    print(f"上下文检查：{context_prompt} -> 不一致（应为消极）")
    
    # 创意性：生成变体
    variant_prompt = "为'今天我收到了意外的惊喜礼物!'生成一个创意变体。"
    variant = "今天我意外收到了一份精美的礼物，太开心了！"
    print(f"创意变体：{variant}")
    
    # 伦理隐私：模拟脱敏
    sensitive_data = "用户姓名：张伟，电话：12345678901"
    desensitized = sensitive_data.replace("张伟", "[姓名]").replace("12345678901", "[电话]")
    print(f"伦理隐私：原始数据：{sensitive_data} -> 脱敏后：{desensitized}")

if __name__ == "__main__":
    main()
